// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: junimohost/provisioner/v1/provisioner.proto

#include "junimohost/provisioner/v1/provisioner.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto;
namespace junimohost {
namespace provisioner {
namespace v1 {
class ProvisionedServerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProvisionedServer> _instance;
} _ProvisionedServer_default_instance_;
class UpdateServerSizeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateServerSizeRequest> _instance;
} _UpdateServerSizeRequest_default_instance_;
class UpdateServerSizeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateServerSizeResponse> _instance;
} _UpdateServerSizeResponse_default_instance_;
class ProvisionServerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProvisionServerRequest> _instance;
} _ProvisionServerRequest_default_instance_;
class ProvisionServerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProvisionServerResponse> _instance;
} _ProvisionServerResponse_default_instance_;
class DeleteServerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteServerRequest> _instance;
} _DeleteServerRequest_default_instance_;
class GetServersForAccountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetServersForAccountRequest> _instance;
} _GetServersForAccountRequest_default_instance_;
class GetServersForAccountResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetServersForAccountResponse> _instance;
} _GetServersForAccountResponse_default_instance_;
}  // namespace v1
}  // namespace provisioner
}  // namespace junimohost
static void InitDefaultsscc_info_DeleteServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_DeleteServerRequest_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::DeleteServerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::DeleteServerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {}};

static void InitDefaultsscc_info_GetServersForAccountRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_GetServersForAccountRequest_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::GetServersForAccountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::GetServersForAccountRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetServersForAccountRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetServersForAccountRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {}};

static void InitDefaultsscc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_GetServersForAccountResponse_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::GetServersForAccountResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::GetServersForAccountResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {
      &scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,}};

static void InitDefaultsscc_info_ProvisionServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_ProvisionServerRequest_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::ProvisionServerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::ProvisionServerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProvisionServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProvisionServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {}};

static void InitDefaultsscc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_ProvisionServerResponse_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::ProvisionServerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::ProvisionServerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {
      &scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,}};

static void InitDefaultsscc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_ProvisionedServer_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::ProvisionedServer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::ProvisionedServer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {}};

static void InitDefaultsscc_info_UpdateServerSizeRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_UpdateServerSizeRequest_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::UpdateServerSizeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::UpdateServerSizeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateServerSizeRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateServerSizeRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {}};

static void InitDefaultsscc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::junimohost::provisioner::v1::_UpdateServerSizeResponse_default_instance_;
    new (ptr) ::junimohost::provisioner::v1::UpdateServerSizeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::junimohost::provisioner::v1::UpdateServerSizeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto}, {
      &scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionedServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionedServer, admin_account_id_),
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionedServer, server_id_),
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionedServer, instance_size_),
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionedServer, host_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::UpdateServerSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::UpdateServerSizeRequest, server_id_),
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::UpdateServerSizeRequest, instance_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::UpdateServerSizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::UpdateServerSizeResponse, server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionServerRequest, admin_account_id_),
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionServerRequest, instance_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::ProvisionServerResponse, server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::DeleteServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::DeleteServerRequest, server_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::GetServersForAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::GetServersForAccountRequest, account_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::GetServersForAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::junimohost::provisioner::v1::GetServersForAccountResponse, servers_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::junimohost::provisioner::v1::ProvisionedServer)},
  { 9, -1, sizeof(::junimohost::provisioner::v1::UpdateServerSizeRequest)},
  { 16, -1, sizeof(::junimohost::provisioner::v1::UpdateServerSizeResponse)},
  { 22, -1, sizeof(::junimohost::provisioner::v1::ProvisionServerRequest)},
  { 29, -1, sizeof(::junimohost::provisioner::v1::ProvisionServerResponse)},
  { 35, -1, sizeof(::junimohost::provisioner::v1::DeleteServerRequest)},
  { 41, -1, sizeof(::junimohost::provisioner::v1::GetServersForAccountRequest)},
  { 47, -1, sizeof(::junimohost::provisioner::v1::GetServersForAccountResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_ProvisionedServer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_UpdateServerSizeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_UpdateServerSizeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_ProvisionServerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_ProvisionServerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_DeleteServerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_GetServersForAccountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::junimohost::provisioner::v1::_GetServersForAccountResponse_default_instance_),
};

const char descriptor_table_protodef_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+junimohost/provisioner/v1/provisioner."
  "proto\022\031junimohost.provisioner.v1\032\034google"
  "/api/annotations.proto\032\033google/protobuf/"
  "empty.proto\032 google/protobuf/field_mask."
  "proto\"\232\001\n\021ProvisionedServer\022(\n\020admin_acc"
  "ount_id\030\001 \001(\003R\016adminAccountId\022\033\n\tserver_"
  "id\030\002 \001(\003R\010serverId\022#\n\rinstance_size\030\003 \001("
  "\005R\014instanceSize\022\031\n\010host_uri\030\004 \001(\tR\007hostU"
  "ri\"[\n\027UpdateServerSizeRequest\022\033\n\tserver_"
  "id\030\001 \001(\003R\010serverId\022#\n\rinstance_size\030\002 \001("
  "\005R\014instanceSize\"`\n\030UpdateServerSizeRespo"
  "nse\022D\n\006server\030\001 \001(\0132,.junimohost.provisi"
  "oner.v1.ProvisionedServerR\006server\"g\n\026Pro"
  "visionServerRequest\022(\n\020admin_account_id\030"
  "\001 \001(\003R\016adminAccountId\022#\n\rinstance_size\030\002"
  " \001(\005R\014instanceSize\"_\n\027ProvisionServerRes"
  "ponse\022D\n\006server\030\001 \001(\0132,.junimohost.provi"
  "sioner.v1.ProvisionedServerR\006server\"2\n\023D"
  "eleteServerRequest\022\033\n\tserver_id\030\001 \001(\003R\010s"
  "erverId\"<\n\033GetServersForAccountRequest\022\035"
  "\n\naccount_id\030\001 \001(\003R\taccountId\"f\n\034GetServ"
  "ersForAccountResponse\022F\n\007servers\030\001 \003(\0132,"
  ".junimohost.provisioner.v1.ProvisionedSe"
  "rverR\007servers2\201\005\n\022ProvisionerService\022\221\001\n"
  "\017ProvisionServer\0221.junimohost.provisione"
  "r.v1.ProvisionServerRequest\0322.junimohost"
  ".provisioner.v1.ProvisionServerResponse\""
  "\027\202\323\344\223\002\021\"\017/v1/provisioner\022{\n\014DeleteServer"
  "\022..junimohost.provisioner.v1.DeleteServe"
  "rRequest\032\026.google.protobuf.Empty\"#\202\323\344\223\002\035"
  "*\033/v1/provisioner/{server_id}\022\266\001\n\024GetSer"
  "versForAccount\0226.junimohost.provisioner."
  "v1.GetServersForAccountRequest\0327.junimoh"
  "ost.provisioner.v1.GetServersForAccountR"
  "esponse\"-\202\323\344\223\002\'\022%/v1/provisioner/account"
  "s/{account_id}\022\240\001\n\020UpdateServerSize\0222.ju"
  "nimohost.provisioner.v1.UpdateServerSize"
  "Request\0323.junimohost.provisioner.v1.Upda"
  "teServerSizeResponse\"#\202\323\344\223\002\0352\033/v1/provis"
  "ioner/{server_id}BCZAgithub.com/junimoho"
  "st/junimo-api/gen/go/junimohost/provisio"
  "ner/v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_sccs[8] = {
  &scc_info_DeleteServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_GetServersForAccountRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_ProvisionServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_UpdateServerSizeRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
  &scc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto = {
  false, false, descriptor_table_protodef_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto, "junimohost/provisioner/v1/provisioner.proto", 1654,
  &descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_once, descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_sccs, descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto_deps, 8, 3,
  schemas, file_default_instances, TableStruct_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto::offsets,
  file_level_metadata_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto, 8, file_level_enum_descriptors_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto, file_level_service_descriptors_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto)), true);
namespace junimohost {
namespace provisioner {
namespace v1 {

// ===================================================================

void ProvisionedServer::InitAsDefaultInstance() {
}
class ProvisionedServer::_Internal {
 public:
};

ProvisionedServer::ProvisionedServer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.ProvisionedServer)
}
ProvisionedServer::ProvisionedServer(const ProvisionedServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host_uri().empty()) {
    host_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host_uri(),
      GetArena());
  }
  ::memcpy(&admin_account_id_, &from.admin_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&instance_size_) -
    reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.ProvisionedServer)
}

void ProvisionedServer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  host_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&admin_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
}

ProvisionedServer::~ProvisionedServer() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.ProvisionedServer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProvisionedServer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProvisionedServer::ArenaDtor(void* object) {
  ProvisionedServer* _this = reinterpret_cast< ProvisionedServer* >(object);
  (void)_this;
}
void ProvisionedServer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvisionedServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProvisionedServer& ProvisionedServer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProvisionedServer_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void ProvisionedServer::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.ProvisionedServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&admin_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvisionedServer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 admin_account_id = 1[json_name = "adminAccountId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          admin_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 server_id = 2[json_name = "serverId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          server_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 instance_size = 3[json_name = "instanceSize"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          instance_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host_uri = 4[json_name = "hostUri"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_host_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "junimohost.provisioner.v1.ProvisionedServer.host_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvisionedServer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.ProvisionedServer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 admin_account_id = 1[json_name = "adminAccountId"];
  if (this->admin_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_admin_account_id(), target);
  }

  // int64 server_id = 2[json_name = "serverId"];
  if (this->server_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_server_id(), target);
  }

  // int32 instance_size = 3[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_instance_size(), target);
  }

  // string host_uri = 4[json_name = "hostUri"];
  if (this->host_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_uri().data(), static_cast<int>(this->_internal_host_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "junimohost.provisioner.v1.ProvisionedServer.host_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_host_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.ProvisionedServer)
  return target;
}

size_t ProvisionedServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.ProvisionedServer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host_uri = 4[json_name = "hostUri"];
  if (this->host_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_uri());
  }

  // int64 admin_account_id = 1[json_name = "adminAccountId"];
  if (this->admin_account_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_admin_account_id());
  }

  // int64 server_id = 2[json_name = "serverId"];
  if (this->server_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_server_id());
  }

  // int32 instance_size = 3[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_instance_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProvisionedServer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.ProvisionedServer)
  GOOGLE_DCHECK_NE(&from, this);
  const ProvisionedServer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProvisionedServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.ProvisionedServer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.ProvisionedServer)
    MergeFrom(*source);
  }
}

void ProvisionedServer::MergeFrom(const ProvisionedServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.ProvisionedServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_uri().size() > 0) {
    _internal_set_host_uri(from._internal_host_uri());
  }
  if (from.admin_account_id() != 0) {
    _internal_set_admin_account_id(from._internal_admin_account_id());
  }
  if (from.server_id() != 0) {
    _internal_set_server_id(from._internal_server_id());
  }
  if (from.instance_size() != 0) {
    _internal_set_instance_size(from._internal_instance_size());
  }
}

void ProvisionedServer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.ProvisionedServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisionedServer::CopyFrom(const ProvisionedServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.ProvisionedServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisionedServer::IsInitialized() const {
  return true;
}

void ProvisionedServer::InternalSwap(ProvisionedServer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  host_uri_.Swap(&other->host_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProvisionedServer, instance_size_)
      + sizeof(ProvisionedServer::instance_size_)
      - PROTOBUF_FIELD_OFFSET(ProvisionedServer, admin_account_id_)>(
          reinterpret_cast<char*>(&admin_account_id_),
          reinterpret_cast<char*>(&other->admin_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvisionedServer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateServerSizeRequest::InitAsDefaultInstance() {
}
class UpdateServerSizeRequest::_Internal {
 public:
};

UpdateServerSizeRequest::UpdateServerSizeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.UpdateServerSizeRequest)
}
UpdateServerSizeRequest::UpdateServerSizeRequest(const UpdateServerSizeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&server_id_, &from.server_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&instance_size_) -
    reinterpret_cast<char*>(&server_id_)) + sizeof(instance_size_));
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.UpdateServerSizeRequest)
}

void UpdateServerSizeRequest::SharedCtor() {
  ::memset(&server_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&server_id_)) + sizeof(instance_size_));
}

UpdateServerSizeRequest::~UpdateServerSizeRequest() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.UpdateServerSizeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateServerSizeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateServerSizeRequest::ArenaDtor(void* object) {
  UpdateServerSizeRequest* _this = reinterpret_cast< UpdateServerSizeRequest* >(object);
  (void)_this;
}
void UpdateServerSizeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateServerSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateServerSizeRequest& UpdateServerSizeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateServerSizeRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void UpdateServerSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&server_id_)) + sizeof(instance_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateServerSizeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 server_id = 1[json_name = "serverId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          server_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 instance_size = 2[json_name = "instanceSize"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          instance_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateServerSizeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 server_id = 1[json_name = "serverId"];
  if (this->server_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_server_id(), target);
  }

  // int32 instance_size = 2[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_instance_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.UpdateServerSizeRequest)
  return target;
}

size_t UpdateServerSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 server_id = 1[json_name = "serverId"];
  if (this->server_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_server_id());
  }

  // int32 instance_size = 2[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_instance_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateServerSizeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateServerSizeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateServerSizeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.UpdateServerSizeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.UpdateServerSizeRequest)
    MergeFrom(*source);
  }
}

void UpdateServerSizeRequest::MergeFrom(const UpdateServerSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id() != 0) {
    _internal_set_server_id(from._internal_server_id());
  }
  if (from.instance_size() != 0) {
    _internal_set_instance_size(from._internal_instance_size());
  }
}

void UpdateServerSizeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerSizeRequest::CopyFrom(const UpdateServerSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.UpdateServerSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerSizeRequest::IsInitialized() const {
  return true;
}

void UpdateServerSizeRequest::InternalSwap(UpdateServerSizeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateServerSizeRequest, instance_size_)
      + sizeof(UpdateServerSizeRequest::instance_size_)
      - PROTOBUF_FIELD_OFFSET(UpdateServerSizeRequest, server_id_)>(
          reinterpret_cast<char*>(&server_id_),
          reinterpret_cast<char*>(&other->server_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateServerSizeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateServerSizeResponse::InitAsDefaultInstance() {
  ::junimohost::provisioner::v1::_UpdateServerSizeResponse_default_instance_._instance.get_mutable()->server_ = const_cast< ::junimohost::provisioner::v1::ProvisionedServer*>(
      ::junimohost::provisioner::v1::ProvisionedServer::internal_default_instance());
}
class UpdateServerSizeResponse::_Internal {
 public:
  static const ::junimohost::provisioner::v1::ProvisionedServer& server(const UpdateServerSizeResponse* msg);
};

const ::junimohost::provisioner::v1::ProvisionedServer&
UpdateServerSizeResponse::_Internal::server(const UpdateServerSizeResponse* msg) {
  return *msg->server_;
}
UpdateServerSizeResponse::UpdateServerSizeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.UpdateServerSizeResponse)
}
UpdateServerSizeResponse::UpdateServerSizeResponse(const UpdateServerSizeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_server()) {
    server_ = new ::junimohost::provisioner::v1::ProvisionedServer(*from.server_);
  } else {
    server_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.UpdateServerSizeResponse)
}

void UpdateServerSizeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  server_ = nullptr;
}

UpdateServerSizeResponse::~UpdateServerSizeResponse() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.UpdateServerSizeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateServerSizeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete server_;
}

void UpdateServerSizeResponse::ArenaDtor(void* object) {
  UpdateServerSizeResponse* _this = reinterpret_cast< UpdateServerSizeResponse* >(object);
  (void)_this;
}
void UpdateServerSizeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateServerSizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateServerSizeResponse& UpdateServerSizeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateServerSizeResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void UpdateServerSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && server_ != nullptr) {
    delete server_;
  }
  server_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateServerSizeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_server(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateServerSizeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
  if (this->has_server()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::server(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.UpdateServerSizeResponse)
  return target;
}

size_t UpdateServerSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
  if (this->has_server()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *server_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateServerSizeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateServerSizeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateServerSizeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.UpdateServerSizeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.UpdateServerSizeResponse)
    MergeFrom(*source);
  }
}

void UpdateServerSizeResponse::MergeFrom(const UpdateServerSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    _internal_mutable_server()->::junimohost::provisioner::v1::ProvisionedServer::MergeFrom(from._internal_server());
  }
}

void UpdateServerSizeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerSizeResponse::CopyFrom(const UpdateServerSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.UpdateServerSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerSizeResponse::IsInitialized() const {
  return true;
}

void UpdateServerSizeResponse::InternalSwap(UpdateServerSizeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(server_, other->server_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateServerSizeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProvisionServerRequest::InitAsDefaultInstance() {
}
class ProvisionServerRequest::_Internal {
 public:
};

ProvisionServerRequest::ProvisionServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.ProvisionServerRequest)
}
ProvisionServerRequest::ProvisionServerRequest(const ProvisionServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&admin_account_id_, &from.admin_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&instance_size_) -
    reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.ProvisionServerRequest)
}

void ProvisionServerRequest::SharedCtor() {
  ::memset(&admin_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
}

ProvisionServerRequest::~ProvisionServerRequest() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.ProvisionServerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProvisionServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProvisionServerRequest::ArenaDtor(void* object) {
  ProvisionServerRequest* _this = reinterpret_cast< ProvisionServerRequest* >(object);
  (void)_this;
}
void ProvisionServerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvisionServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProvisionServerRequest& ProvisionServerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProvisionServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void ProvisionServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.ProvisionServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&admin_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_size_) -
      reinterpret_cast<char*>(&admin_account_id_)) + sizeof(instance_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvisionServerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 admin_account_id = 1[json_name = "adminAccountId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          admin_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 instance_size = 2[json_name = "instanceSize"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          instance_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvisionServerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.ProvisionServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 admin_account_id = 1[json_name = "adminAccountId"];
  if (this->admin_account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_admin_account_id(), target);
  }

  // int32 instance_size = 2[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_instance_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.ProvisionServerRequest)
  return target;
}

size_t ProvisionServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.ProvisionServerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 admin_account_id = 1[json_name = "adminAccountId"];
  if (this->admin_account_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_admin_account_id());
  }

  // int32 instance_size = 2[json_name = "instanceSize"];
  if (this->instance_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_instance_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProvisionServerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.ProvisionServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProvisionServerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProvisionServerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.ProvisionServerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.ProvisionServerRequest)
    MergeFrom(*source);
  }
}

void ProvisionServerRequest::MergeFrom(const ProvisionServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.ProvisionServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.admin_account_id() != 0) {
    _internal_set_admin_account_id(from._internal_admin_account_id());
  }
  if (from.instance_size() != 0) {
    _internal_set_instance_size(from._internal_instance_size());
  }
}

void ProvisionServerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.ProvisionServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisionServerRequest::CopyFrom(const ProvisionServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.ProvisionServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisionServerRequest::IsInitialized() const {
  return true;
}

void ProvisionServerRequest::InternalSwap(ProvisionServerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProvisionServerRequest, instance_size_)
      + sizeof(ProvisionServerRequest::instance_size_)
      - PROTOBUF_FIELD_OFFSET(ProvisionServerRequest, admin_account_id_)>(
          reinterpret_cast<char*>(&admin_account_id_),
          reinterpret_cast<char*>(&other->admin_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvisionServerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProvisionServerResponse::InitAsDefaultInstance() {
  ::junimohost::provisioner::v1::_ProvisionServerResponse_default_instance_._instance.get_mutable()->server_ = const_cast< ::junimohost::provisioner::v1::ProvisionedServer*>(
      ::junimohost::provisioner::v1::ProvisionedServer::internal_default_instance());
}
class ProvisionServerResponse::_Internal {
 public:
  static const ::junimohost::provisioner::v1::ProvisionedServer& server(const ProvisionServerResponse* msg);
};

const ::junimohost::provisioner::v1::ProvisionedServer&
ProvisionServerResponse::_Internal::server(const ProvisionServerResponse* msg) {
  return *msg->server_;
}
ProvisionServerResponse::ProvisionServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.ProvisionServerResponse)
}
ProvisionServerResponse::ProvisionServerResponse(const ProvisionServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_server()) {
    server_ = new ::junimohost::provisioner::v1::ProvisionedServer(*from.server_);
  } else {
    server_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.ProvisionServerResponse)
}

void ProvisionServerResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  server_ = nullptr;
}

ProvisionServerResponse::~ProvisionServerResponse() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.ProvisionServerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProvisionServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete server_;
}

void ProvisionServerResponse::ArenaDtor(void* object) {
  ProvisionServerResponse* _this = reinterpret_cast< ProvisionServerResponse* >(object);
  (void)_this;
}
void ProvisionServerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvisionServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProvisionServerResponse& ProvisionServerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProvisionServerResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void ProvisionServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.ProvisionServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && server_ != nullptr) {
    delete server_;
  }
  server_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvisionServerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_server(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvisionServerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.ProvisionServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
  if (this->has_server()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::server(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.ProvisionServerResponse)
  return target;
}

size_t ProvisionServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.ProvisionServerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .junimohost.provisioner.v1.ProvisionedServer server = 1[json_name = "server"];
  if (this->has_server()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *server_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProvisionServerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.ProvisionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProvisionServerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProvisionServerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.ProvisionServerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.ProvisionServerResponse)
    MergeFrom(*source);
  }
}

void ProvisionServerResponse::MergeFrom(const ProvisionServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.ProvisionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    _internal_mutable_server()->::junimohost::provisioner::v1::ProvisionedServer::MergeFrom(from._internal_server());
  }
}

void ProvisionServerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.ProvisionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisionServerResponse::CopyFrom(const ProvisionServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.ProvisionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisionServerResponse::IsInitialized() const {
  return true;
}

void ProvisionServerResponse::InternalSwap(ProvisionServerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(server_, other->server_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvisionServerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteServerRequest::InitAsDefaultInstance() {
}
class DeleteServerRequest::_Internal {
 public:
};

DeleteServerRequest::DeleteServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.DeleteServerRequest)
}
DeleteServerRequest::DeleteServerRequest(const DeleteServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_id_ = from.server_id_;
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.DeleteServerRequest)
}

void DeleteServerRequest::SharedCtor() {
  server_id_ = PROTOBUF_LONGLONG(0);
}

DeleteServerRequest::~DeleteServerRequest() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.DeleteServerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteServerRequest::ArenaDtor(void* object) {
  DeleteServerRequest* _this = reinterpret_cast< DeleteServerRequest* >(object);
  (void)_this;
}
void DeleteServerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteServerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteServerRequest& DeleteServerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteServerRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void DeleteServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.DeleteServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteServerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 server_id = 1[json_name = "serverId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          server_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteServerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.DeleteServerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 server_id = 1[json_name = "serverId"];
  if (this->server_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_server_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.DeleteServerRequest)
  return target;
}

size_t DeleteServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.DeleteServerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 server_id = 1[json_name = "serverId"];
  if (this->server_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_server_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteServerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.DeleteServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteServerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteServerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.DeleteServerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.DeleteServerRequest)
    MergeFrom(*source);
  }
}

void DeleteServerRequest::MergeFrom(const DeleteServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.DeleteServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id() != 0) {
    _internal_set_server_id(from._internal_server_id());
  }
}

void DeleteServerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.DeleteServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteServerRequest::CopyFrom(const DeleteServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.DeleteServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteServerRequest::IsInitialized() const {
  return true;
}

void DeleteServerRequest::InternalSwap(DeleteServerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(server_id_, other->server_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteServerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetServersForAccountRequest::InitAsDefaultInstance() {
}
class GetServersForAccountRequest::_Internal {
 public:
};

GetServersForAccountRequest::GetServersForAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.GetServersForAccountRequest)
}
GetServersForAccountRequest::GetServersForAccountRequest(const GetServersForAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.GetServersForAccountRequest)
}

void GetServersForAccountRequest::SharedCtor() {
  account_id_ = PROTOBUF_LONGLONG(0);
}

GetServersForAccountRequest::~GetServersForAccountRequest() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.GetServersForAccountRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServersForAccountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetServersForAccountRequest::ArenaDtor(void* object) {
  GetServersForAccountRequest* _this = reinterpret_cast< GetServersForAccountRequest* >(object);
  (void)_this;
}
void GetServersForAccountRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServersForAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServersForAccountRequest& GetServersForAccountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetServersForAccountRequest_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void GetServersForAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServersForAccountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 account_id = 1[json_name = "accountId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServersForAccountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account_id = 1[json_name = "accountId"];
  if (this->account_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.GetServersForAccountRequest)
  return target;
}

size_t GetServersForAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 account_id = 1[json_name = "accountId"];
  if (this->account_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_account_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServersForAccountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServersForAccountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServersForAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.GetServersForAccountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.GetServersForAccountRequest)
    MergeFrom(*source);
  }
}

void GetServersForAccountRequest::MergeFrom(const GetServersForAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_id() != 0) {
    _internal_set_account_id(from._internal_account_id());
  }
}

void GetServersForAccountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServersForAccountRequest::CopyFrom(const GetServersForAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.GetServersForAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServersForAccountRequest::IsInitialized() const {
  return true;
}

void GetServersForAccountRequest::InternalSwap(GetServersForAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(account_id_, other->account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServersForAccountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetServersForAccountResponse::InitAsDefaultInstance() {
}
class GetServersForAccountResponse::_Internal {
 public:
};

GetServersForAccountResponse::GetServersForAccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  servers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:junimohost.provisioner.v1.GetServersForAccountResponse)
}
GetServersForAccountResponse::GetServersForAccountResponse(const GetServersForAccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:junimohost.provisioner.v1.GetServersForAccountResponse)
}

void GetServersForAccountResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
}

GetServersForAccountResponse::~GetServersForAccountResponse() {
  // @@protoc_insertion_point(destructor:junimohost.provisioner.v1.GetServersForAccountResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetServersForAccountResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetServersForAccountResponse::ArenaDtor(void* object) {
  GetServersForAccountResponse* _this = reinterpret_cast< GetServersForAccountResponse* >(object);
  (void)_this;
}
void GetServersForAccountResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetServersForAccountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServersForAccountResponse& GetServersForAccountResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetServersForAccountResponse_junimohost_2fprovisioner_2fv1_2fprovisioner_2eproto.base);
  return *internal_default_instance();
}


void GetServersForAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetServersForAccountResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .junimohost.provisioner.v1.ProvisionedServer servers = 1[json_name = "servers"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_servers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServersForAccountResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .junimohost.provisioner.v1.ProvisionedServer servers = 1[json_name = "servers"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_servers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_servers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:junimohost.provisioner.v1.GetServersForAccountResponse)
  return target;
}

size_t GetServersForAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .junimohost.provisioner.v1.ProvisionedServer servers = 1[json_name = "servers"];
  total_size += 1UL * this->_internal_servers_size();
  for (const auto& msg : this->servers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServersForAccountResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServersForAccountResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServersForAccountResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:junimohost.provisioner.v1.GetServersForAccountResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:junimohost.provisioner.v1.GetServersForAccountResponse)
    MergeFrom(*source);
  }
}

void GetServersForAccountResponse::MergeFrom(const GetServersForAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
}

void GetServersForAccountResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServersForAccountResponse::CopyFrom(const GetServersForAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:junimohost.provisioner.v1.GetServersForAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServersForAccountResponse::IsInitialized() const {
  return true;
}

void GetServersForAccountResponse::InternalSwap(GetServersForAccountResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  servers_.InternalSwap(&other->servers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServersForAccountResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace provisioner
}  // namespace junimohost
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::ProvisionedServer* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::ProvisionedServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::ProvisionedServer >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::UpdateServerSizeRequest* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::UpdateServerSizeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::UpdateServerSizeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::UpdateServerSizeResponse* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::UpdateServerSizeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::UpdateServerSizeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::ProvisionServerRequest* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::ProvisionServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::ProvisionServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::ProvisionServerResponse* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::ProvisionServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::ProvisionServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::DeleteServerRequest* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::DeleteServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::DeleteServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::GetServersForAccountRequest* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::GetServersForAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::GetServersForAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::junimohost::provisioner::v1::GetServersForAccountResponse* Arena::CreateMaybeMessage< ::junimohost::provisioner::v1::GetServersForAccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::junimohost::provisioner::v1::GetServersForAccountResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
