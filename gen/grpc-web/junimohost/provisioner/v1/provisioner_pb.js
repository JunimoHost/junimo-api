// source: junimohost/provisioner/v1/provisioner.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.junimohost.provisioner.v1.DeleteServerRequest', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.GetServersForAccountRequest', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.GetServersForAccountResponse', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.ProvisionServerRequest', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.ProvisionServerResponse', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.ProvisionedServer', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.UpdateServerSizeRequest', null, global);
goog.exportSymbol('proto.junimohost.provisioner.v1.UpdateServerSizeResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.ProvisionedServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.ProvisionedServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.ProvisionedServer.displayName = 'proto.junimohost.provisioner.v1.ProvisionedServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.UpdateServerSizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.UpdateServerSizeRequest.displayName = 'proto.junimohost.provisioner.v1.UpdateServerSizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.UpdateServerSizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.UpdateServerSizeResponse.displayName = 'proto.junimohost.provisioner.v1.UpdateServerSizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.ProvisionServerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.ProvisionServerRequest.displayName = 'proto.junimohost.provisioner.v1.ProvisionServerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.ProvisionServerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.ProvisionServerResponse.displayName = 'proto.junimohost.provisioner.v1.ProvisionServerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.DeleteServerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.DeleteServerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.DeleteServerRequest.displayName = 'proto.junimohost.provisioner.v1.DeleteServerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.junimohost.provisioner.v1.GetServersForAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.GetServersForAccountRequest.displayName = 'proto.junimohost.provisioner.v1.GetServersForAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.junimohost.provisioner.v1.GetServersForAccountResponse.repeatedFields_, null);
};
goog.inherits(proto.junimohost.provisioner.v1.GetServersForAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.junimohost.provisioner.v1.GetServersForAccountResponse.displayName = 'proto.junimohost.provisioner.v1.GetServersForAccountResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.ProvisionedServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.ProvisionedServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionedServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    serverId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    instanceSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hostUri: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.ProvisionedServer;
  return proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.ProvisionedServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAdminAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInstanceSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.ProvisionedServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.ProvisionedServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionedServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminAccountId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getServerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInstanceSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHostUri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 admin_account_id = 1;
 * @return {number}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.getAdminAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer} returns this
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.setAdminAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 server_id = 2;
 * @return {number}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.getServerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer} returns this
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.setServerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 instance_size = 3;
 * @return {number}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.getInstanceSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer} returns this
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.setInstanceSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string host_uri = 4;
 * @return {string}
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.getHostUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer} returns this
 */
proto.junimohost.provisioner.v1.ProvisionedServer.prototype.setHostUri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.UpdateServerSizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    instanceSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.UpdateServerSizeRequest;
  return proto.junimohost.provisioner.v1.UpdateServerSizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInstanceSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.UpdateServerSizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getInstanceSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 server_id = 1;
 * @return {number}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.getServerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest} returns this
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.setServerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 instance_size = 2;
 * @return {number}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.getInstanceSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeRequest} returns this
 */
proto.junimohost.provisioner.v1.UpdateServerSizeRequest.prototype.setInstanceSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.UpdateServerSizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    server: (f = msg.getServer()) && proto.junimohost.provisioner.v1.ProvisionedServer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.UpdateServerSizeResponse;
  return proto.junimohost.provisioner.v1.UpdateServerSizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.junimohost.provisioner.v1.ProvisionedServer;
      reader.readMessage(value,proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinaryFromReader);
      msg.setServer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.UpdateServerSizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.junimohost.provisioner.v1.ProvisionedServer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProvisionedServer server = 1;
 * @return {?proto.junimohost.provisioner.v1.ProvisionedServer}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.getServer = function() {
  return /** @type{?proto.junimohost.provisioner.v1.ProvisionedServer} */ (
    jspb.Message.getWrapperField(this, proto.junimohost.provisioner.v1.ProvisionedServer, 1));
};


/**
 * @param {?proto.junimohost.provisioner.v1.ProvisionedServer|undefined} value
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse} returns this
*/
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.setServer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.junimohost.provisioner.v1.UpdateServerSizeResponse} returns this
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.clearServer = function() {
  return this.setServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.junimohost.provisioner.v1.UpdateServerSizeResponse.prototype.hasServer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.ProvisionServerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    instanceSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerRequest}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.ProvisionServerRequest;
  return proto.junimohost.provisioner.v1.ProvisionServerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerRequest}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAdminAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInstanceSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.ProvisionServerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminAccountId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getInstanceSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 admin_account_id = 1;
 * @return {number}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.getAdminAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerRequest} returns this
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.setAdminAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 instance_size = 2;
 * @return {number}
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.getInstanceSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerRequest} returns this
 */
proto.junimohost.provisioner.v1.ProvisionServerRequest.prototype.setInstanceSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.ProvisionServerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    server: (f = msg.getServer()) && proto.junimohost.provisioner.v1.ProvisionedServer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerResponse}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.ProvisionServerResponse;
  return proto.junimohost.provisioner.v1.ProvisionServerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerResponse}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.junimohost.provisioner.v1.ProvisionedServer;
      reader.readMessage(value,proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinaryFromReader);
      msg.setServer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.ProvisionServerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.ProvisionServerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.junimohost.provisioner.v1.ProvisionedServer.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProvisionedServer server = 1;
 * @return {?proto.junimohost.provisioner.v1.ProvisionedServer}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.getServer = function() {
  return /** @type{?proto.junimohost.provisioner.v1.ProvisionedServer} */ (
    jspb.Message.getWrapperField(this, proto.junimohost.provisioner.v1.ProvisionedServer, 1));
};


/**
 * @param {?proto.junimohost.provisioner.v1.ProvisionedServer|undefined} value
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerResponse} returns this
*/
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.setServer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.junimohost.provisioner.v1.ProvisionServerResponse} returns this
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.clearServer = function() {
  return this.setServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.junimohost.provisioner.v1.ProvisionServerResponse.prototype.hasServer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.DeleteServerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.DeleteServerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.DeleteServerRequest}
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.DeleteServerRequest;
  return proto.junimohost.provisioner.v1.DeleteServerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.DeleteServerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.DeleteServerRequest}
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.DeleteServerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.DeleteServerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 server_id = 1;
 * @return {number}
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.prototype.getServerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.DeleteServerRequest} returns this
 */
proto.junimohost.provisioner.v1.DeleteServerRequest.prototype.setServerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.GetServersForAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountRequest}
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.GetServersForAccountRequest;
  return proto.junimohost.provisioner.v1.GetServersForAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountRequest}
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.GetServersForAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 account_id = 1;
 * @return {number}
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountRequest} returns this
 */
proto.junimohost.provisioner.v1.GetServersForAccountRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.junimohost.provisioner.v1.GetServersForAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    serversList: jspb.Message.toObjectList(msg.getServersList(),
    proto.junimohost.provisioner.v1.ProvisionedServer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountResponse}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.junimohost.provisioner.v1.GetServersForAccountResponse;
  return proto.junimohost.provisioner.v1.GetServersForAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountResponse}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.junimohost.provisioner.v1.ProvisionedServer;
      reader.readMessage(value,proto.junimohost.provisioner.v1.ProvisionedServer.deserializeBinaryFromReader);
      msg.addServers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.junimohost.provisioner.v1.GetServersForAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.junimohost.provisioner.v1.GetServersForAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.junimohost.provisioner.v1.ProvisionedServer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProvisionedServer servers = 1;
 * @return {!Array<!proto.junimohost.provisioner.v1.ProvisionedServer>}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.getServersList = function() {
  return /** @type{!Array<!proto.junimohost.provisioner.v1.ProvisionedServer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.junimohost.provisioner.v1.ProvisionedServer, 1));
};


/**
 * @param {!Array<!proto.junimohost.provisioner.v1.ProvisionedServer>} value
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountResponse} returns this
*/
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.setServersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.junimohost.provisioner.v1.ProvisionedServer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.junimohost.provisioner.v1.ProvisionedServer}
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.addServers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.junimohost.provisioner.v1.ProvisionedServer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.junimohost.provisioner.v1.GetServersForAccountResponse} returns this
 */
proto.junimohost.provisioner.v1.GetServersForAccountResponse.prototype.clearServersList = function() {
  return this.setServersList([]);
};


goog.object.extend(exports, proto.junimohost.provisioner.v1);
