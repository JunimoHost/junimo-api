syntax = "proto3";

package junimohost.servermanager.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/junimohost/backend/genproto/servermanager/v1;pbsm";

service ServerManagerService {
  rpc GetServers(GetServersRequest) returns (GetServersResponse);
  rpc UpdateServer(UpdateServerRequest) returns (UpdateServerResponse);
  rpc CreateGameConfig(CreateGameConfigRequest) returns (CreateGameConfigResponse);

  rpc GetBackups(GetBackupsRequest) returns (GetBackupsResponse);
  rpc RestoreBackup(RestoreBackupRequest) returns (RestoreBackupResponse);
  rpc StopServer(StopServerRequest) returns (StopServerResponse);
  rpc StartServer(StartServerRequest) returns (StartServerResponse);
  rpc RestartServer(RestartServerRequest) returns (RestartServerResponse);

  rpc GetAvailableMods(GetAvailableModsRequest) returns (GetAvailableModsResponse);
  rpc GetServerMods(GetServerModsRequest) returns (GetServerModsResponse);

  rpc GetSharePage(GetSharePageRequest) returns (GetSharePageResponse);
}

message DisplayMod {
  string version_id = 1;
  string name = 2;
  string semver = 3;
  string download_url = 4;
  string homepage = 5;
  bool is_library = 6;
}

message GetSharePageRequest {
  string server_id = 1;
}

message GetSharePageResponse {
  string host_uri = 1;
  string server_name = 2;
  repeated DisplayMod mods = 3;
}

message GetServerModsRequest {
  string server_id = 1;
}

message GetServerModsResponse {
  repeated DisplayMod mods = 1;
}

message GetBackupsRequest {
  string server_id = 1;
}

message Backup {
  string id = 1;
  string name = 2;
  int64 created_at = 3;
}

message GetBackupsResponse {
  repeated Backup backup = 1;
}

message RestoreBackupRequest {
  string server_id = 1;
  string backup_id = 2;
}

message RestoreBackupResponse {}

enum ServerSize {
  UNKNOWN_SIZE = 0;
  STANDARD = 1;
  PRO = 2;
  MODDED = 3;
  MODDED_PRO = 4;
}

message Server {
  string server_id = 1;
  ServerSize instance_size = 2;
  string host_uri = 3;
  string server_name = 4;
  string status = 5;
  string subscription_status = 6;
  int64 trial_end_timestamp = 7; 
}

message UpdateServerRequest {
  string server_id = 1;
  ServerSize instance_size = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateServerResponse { Server server = 1; }

message CreateServerRequest {
  ServerSize instance_size = 1;
  string server_name = 2;
}

message CreateServerResponse { Server server = 1; }

message DeleteServerRequest { string server_id = 1; }

message GetServersRequest {}

message GetServersResponse { repeated Server servers = 1; }

message CreateGameConfigRequest {
  GameConfig config = 1;
  string server_id = 2;
}

message CreateGameConfigResponse {
  GameConfig config = 1;
}

message GameConfig {
  int64 whichFarm = 1;
  bool useSeparateWallets = 2;
  int64 startingCabins = 3;
  bool catPerson = 4;
  string farmName = 5;
  repeated string mod_version_ids = 6;
  repeated string mod_ids = 7;
  int64 max_players = 8;
  int64 cabin_strategy = 9; // 0 is cabin stack, 1 is farmhouse stack
}

message StopServerRequest {
  string server_id = 1;
}

message StopServerResponse {
  
}

message StartServerRequest {
  string server_id = 1;
}

message StartServerResponse {
  
}

message RestartServerRequest {
  string server_id = 1;
}

message RestartServerResponse {

}

message GetAvailableModsRequest {

}

message GetAvailableModsResponse {
  repeated Mod mods = 1;
}

message Mod {
  string mod_id = 1;
  string mod_name = 2;
  string author_name = 3;
  string mod_homepage_url = 4;
  bool requires_fresh_save = 5;
  bool is_library = 6;
  repeated ModVersion versions = 7;
}

message ModVersion {
  string mod_version_id = 1;
  string mod_id = 2;
  string gcs_path = 3;
  string mod_semver = 4;
  string mod_install_url = 5;
  repeated string dependency_version_ids = 6;
}
