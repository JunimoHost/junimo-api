syntax = "proto3";
package junimohost.game_server.v1;
option go_package = "github.com/junimohost/junimo-api/gen/go/junimohost/game-server/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

service GameServerService {
  // maybe need to return long running operation? idk how long this will take
  rpc CreateServer(CreateServerRequest) returns (stream CreateServerResponse) {
    option (google.api.http) = {
      post : "/v1/servers"
    };
  }

  rpc DeleteServer(DeleteServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/servers/{server_id}"
    };
  }

  rpc GetServers(GetServersRequest) returns (GetServersResponse) {
    option (google.api.http) = {
      get : "/v1/servers"
    };
  }

  rpc UpdateServer(UpdateServerRequest) returns (UpdateServerResponse) {
    option (google.api.http) = {
      patch : "/v1/servers/{server_id}"
    };
  }
}

enum GameServerStatus {
  UNKNOWN_STATUS = 0;
  PROVISIONING = 1;
  PAUSED = 2;
  ERRORED = 3;
  CONNECTABLE = 4;
  TERMINATED = 5;
}

enum GameServerSize {
  UNKNOWN_SIZE = 0;
  SMALL = 1;
}

message GameServer {
  string server_id = 1;
  GameServerSize instance_size = 2;
  string host_uri = 3;
  string server_name = 4;
  GameServerStatus status = 5;
}

message UpdateServerRequest {
  string server_id = 1;
  GameServerSize instance_size = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateServerResponse { GameServer server = 1; }

message CreateServerRequest {
  GameServerSize instance_size = 1;
  string server_name = 2;
}

message CreateServerResponse {
  oneof result {
    string server_id = 1;
    GameServer server = 2;
  }
}

message DeleteServerRequest { string server_id = 1; }

message GetServersRequest {}

message GetServersResponse { repeated GameServer servers = 1; }